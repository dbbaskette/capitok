
## Service parameters
##
service:
  ## K8s service type
  ## Allowed values are "Ingress", "ClusterIP", "NodePort" or "LoadBalancer"
  ##
  type: Ingress
  ## TLS parameters
  ##
  tls:
    ## Enable TLS
    ## Note: When type is "Ingress" and TLS is disabled, the port must be included
    ## in the command when pulling/pushing images.
    ## ref: https://github.com/goharbor/harbor/issues/5291
    ##
    enabled: true
    ## Fill the name of secret if you want to use your own TLS certificate.
    ## The secret contains keys named:
    ## "tls.crt" - the certificate (required)
    ## "tls.key" - the private key (required)
    ## "ca.crt" - the certificate of CA (optional), this enables the download
    ## link on portal to download the certificate of CA
    ## These files will be generated automatically if the "secretName" is not set
    ##
    secretName: ""
    ## By default, the Notary service will use the same certificat described above.
    ## Fill the name of secret if you want to use a separated on for Notary.
    ##
    notarySecretName: "harbor-notary"
    ## The common name used to automatically generate the certificates.
    ## Mandatory when "secretName" is not provided or type is not "Ingress".
    ##
    commonName: "*.<YOUR-DOMAIN>"
  ## Ingress parameters
  ##
  ingress:
    ## The list of hostnames to be covered with this ingress record
    ##
    hosts:
      core: harbor.<YOUR-DOMAIN>
      notary: notary.harbor.<YOUR-DOMAIN>
    ## Set to the type of ingress controller if it has specific requirements.
    ## leave as `default` for most ingress controllers.
    ## set to `gce` if using the GCE ingress controller
    ## set to `ncp` if using the NCP (NSX-T Container Plugin) ingress controller
    ##
    controller: default
    ## Ingress annotations done as key:value pairs
    ## For a full list of possible ingress annotations, please see
    ## ref: https://github.com/kubernetes/ingress-nginx/blob/master/docs/user-guide/nginx-configuration/annotations.md
    ##
    annotations:
      ingress.kubernetes.io/ssl-redirect: "true"
      ingress.kubernetes.io/proxy-body-size: "0"
      nginx.ingress.kubernetes.io/ssl-redirect: "true"
      nginx.ingress.kubernetes.io/proxy-body-size: "0"
      kubernetes.io/ingress.class: "nginx"
      cert-manager.io/cluster-issuer: "letsencrypt-prod"
 
externalURL: https://harbor.<YOUR-DOMAIN>
